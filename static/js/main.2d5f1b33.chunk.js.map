{"version":3,"sources":["components/Styles.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","styles","boxFrame","preventDefault","type","pattern","title","required","onChange","Filter","filter","ContactList","contacts","onDeleteContact","ulContainer","map","contact","liItem","spaceBetween","delBtn","onClick","id","App","setContacts","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","prevState","setItem","stringify","Container","ContainerHeading","find","alert","item","shortid","generate","lowerFilter","toLowerCase","includes","nameSearch","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5f1b33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Styles_Container__3M224\",\"ContainerHeading\":\"Styles_ContainerHeading__11Zu6\",\"boxFrame\":\"Styles_boxFrame__azxxe\",\"delBtn\":\"Styles_delBtn__9jH8b\",\"liItem\":\"Styles_liItem__3HIkU\",\"ulContainer\":\"Styles_ulContainer__3en45\",\"spaceBetween\":\"Styles_spaceBetween__1mlqP\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Styles.module.css';\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);                \r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit ( { name, number } );\r\n        reset();\r\n    }\r\n\r\n     return (\r\n            <form className={styles.boxFrame} onSubmit={handleSubmit}>\r\n                <label>Name<br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label><br />\r\n                <label>Number<br />\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label> <br />\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n}\r\n    \r\n    \r\n\r\n    \r\n\r\n\r\n\r\nContactForm.propTypes = {\r\n    name:PropTypes.string,\r\n    number:PropTypes.string,\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n    return (\r\n        <label>Find contacts by name <br />\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={handleChange} />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n}\r\n    \r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport styles from '../Styles.module.css';\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.ulContainer}>\r\n            {contacts.map(contact => (\r\n                <li className={styles.liItem} key={contact.id}>\r\n                    <span className={styles.spaceBetween}><AiOutlineUser/></span>\r\n                    <span className={styles.spaceBetween}>{contact.name}: </span>\r\n                    <span className={styles.spaceBetween}>{contact.number} </span>\r\n                    <button className={styles.delBtn} type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n                </li>))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts:PropTypes.array,\r\n    onDeleteContact:PropTypes.func,\r\n}\r\n\r\nexport default ContactList;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport shortid from 'shortid';\nimport styles from './components/Styles.module.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts( parsedContacts );\n    }\n  }, []);\n\n    useEffect((prevState) => {\n    if (contacts !== prevState) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} already in contacts`);\n      return;\n    }\n\n    const item = { id: shortid.generate(), name: name, number: number };\n    setContacts([item, ...contacts]);\n  };\n\n  const nameSearch = () => {\n    const lowerFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(lowerFilter)\n    );\n  };\n\n  const filterChange = e => {\n    const { value } = e.currentTarget;\n    setFilter (value);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) => (prevState.filter((contact) => contact.id !== contactId)\n    ));\n  };\n \n    return (\n      <div className={styles.Container}>\n        <div>\n          <h1 className={styles.ContainerHeading}>Phonebook</h1>\n          <ContactForm\n            onSubmit={addContact}\n          />\n        </div>\n        <div>\n          <h2 className={styles.ContainerHeading}>Contacts</h2>\n          <div className={styles.boxFrame}>\n          <Filter\n            filter={filter}\n              handleChange={filterChange}\n            />\n          <ContactList\n            contacts={nameSearch()}\n              onDeleteContact={deleteContact}\n            />\n            </div>\n        </div>\n      </div>\n    )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}